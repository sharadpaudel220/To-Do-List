{"ast":null,"code":"var _jsxFileName = \"/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/todolist/src/components/todoinput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoInput(props) {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const handleEnterPress = e => {\n    if (e.keyCode === 13) {\n      props.addList(inputText);\n      setInputText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-box-todo\",\n      placeholder: \"Enter your todo\",\n      value: inputText,\n      onChange: e => {\n        setInputText(e.target.value);\n      },\n      onKeyDown: handleEnterPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => {\n        props.addList(inputText);\n        setInputText(\"\");\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n}\n_s(ToDoInput, \"oZZl5Cneyny2k+spNddMgTCH3wU=\");\n_c = ToDoInput;\nexport default ToDoInput;\nvar _c;\n$RefreshReg$(_c, \"ToDoInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoInput","props","_s","inputText","setInputText","handleEnterPress","e","keyCode","addList","className","children","type","placeholder","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/todolist/src/components/todoinput.js"],"sourcesContent":["import React, { useState } from 'react'\n        function ToDoInput(props) {\n            const [inputText,setInputText] = useState('');\n            const handleEnterPress = (e)=>{\n                if(e.keyCode===13){\n                    props.addList(inputText)\n                    setInputText(\"\")\n                }\n            }\n          return (\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                className=\"input-box-todo\"\n                placeholder=\"Enter your todo\"\n                value={inputText}\n                onChange={e=>{\n                    setInputText(e.target.value)\n                }}\n                onKeyDown={handleEnterPress}\n              />\n              <button className=\"add-btn\" \n              onClick={()=>{\n                props.addList(inputText)\n                setInputText(\"\")\n              }}>+</button>      \n            </div>\n          );\n        }\nexport default ToDoInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMQ,gBAAgB,GAAIC,CAAC,IAAG;IAC1B,IAAGA,CAAC,CAACC,OAAO,KAAG,EAAE,EAAC;MACdN,KAAK,CAACO,OAAO,CAACL,SAAS,CAAC;MACxBC,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EACH,oBACEL,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,gBAAgB;MAC1BG,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEV,SAAU;MACjBW,QAAQ,EAAER,CAAC,IAAE;QACTF,YAAY,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK,CAAC;MAChC,CAAE;MACFG,SAAS,EAAEX;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFrB,OAAA;MAAQU,SAAS,EAAC,SAAS;MAC3BY,OAAO,EAAEA,CAAA,KAAI;QACXpB,KAAK,CAACO,OAAO,CAACL,SAAS,CAAC;QACxBC,YAAY,CAAC,EAAE,CAAC;MAClB,CAAE;MAAAM,QAAA,EAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAAClB,EAAA,CA3BQF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA4B1B,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}