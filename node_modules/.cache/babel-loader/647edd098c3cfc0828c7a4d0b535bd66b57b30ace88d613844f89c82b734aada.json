{"ast":null,"code":"var _jsxFileName = \"/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/todolist/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport ToDoInput from './components/todoinput';\nimport Todolist from './components/todolist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [listToDo, setlistToDo] = useState([]);\n  let addList = inputText => {\n    setlistToDo([...listToDo, inputText]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(ToDoInput, {\n        addList: addList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-heading\",\n        children: \"You have to do :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }, this), listToDo.map((listItem, i) => {\n        return /*#__PURE__*/_jsxDEV(Todolist, {\n          item: listItem\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GiTnF9PH6dG5jaU0GKStx2v2V9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ToDoInput","Todolist","jsxDEV","_jsxDEV","App","_s","listToDo","setlistToDo","addList","inputText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","listItem","i","item","_c","$RefreshReg$"],"sources":["/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/todolist/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css'\nimport ToDoInput from './components/todoinput';\nimport Todolist from './components/todolist';\nfunction App() {\n  const[listToDo, setlistToDo]= useState([]);\n  let addList=(inputText)=>{\n    setlistToDo([...listToDo, inputText]);\n  }\n  return (\n    <div className=\"main-container\">\n      <div className=\"center-container\">\n        <ToDoInput addList={addList} />\n       <h1 className=\"app-heading\">\n        You have to do : \n       </h1>\n       <hr/>\n       {listToDo.map((listItem, i)=>{\n        return(\n          <Todolist key={i} item ={listItem}/>\n        );\n       })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAIS,OAAO,GAAEC,SAAS,IAAG;IACvBF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,SAAS,CAAC,CAAC;EACvC,CAAC;EACD,oBACEN,OAAA;IAAKO,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BR,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BR,OAAA,CAACH,SAAS;QAACQ,OAAO,EAAEA;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCZ,OAAA;QAAIO,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE5B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJT,QAAQ,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,CAAC,KAAG;QAC5B,oBACEf,OAAA,CAACF,QAAQ;UAASkB,IAAI,EAAGF;QAAS,GAAnBC,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAEvC,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CArBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}